Isa atmosphere
Input
height_m
k = -0,0065
t0_k = 288,15
Constante gás perfeito(gamma) = 1,4
R = 287
g_mps = 9,80665
P0 = 101325
e= 2,718281
hTropo_m = 11000
True Air Speed_mps (TAS)

Output
Speed_sound_mps
Temp_k (t1)
Pressure_Pa
Air density_kgpm³ (rho)
Calibrated Air Speed_mps (Cas)
Mach

Formulas
t1 = (t0+k)*h
spSound_mps = sqrt(gamma*R*t1)
pEleven = P0*((t1/t0)^(-g/(k*R)))
pAbEleven = pEleven^(e^((-g/(R*t1))*(h-hTropo)))
pActual = pEleven*pAbEleven
perfGasEq = pActual*R*t1
Mach = TAS/spSound_mps

cdP = pActual*((((((gamma-1)/2)*Mach^2+1)^(gamma/(gamma-1))))-1)
CAS = sqrt((((2*spSound_mps^2)/(gamma-1))*((cdP/P0)+1)^((gamma-1)/gamma))-1)


ExtForcesAndMoments 

Input
LBE
Mass_KG (m) 			
g_mps
W_n = [0;0;g_mps]			
GroundForcesAndMoments_N_Nm      
AeroForcesAndMoments_N_Nm       
ThurstForcesAndMoments_N_Nm      

Outuput
Extforces_N 
Ext_Moments_Nm 
LoadFactors


Formulas
Extforces_N = ([LBE^T1_k] * [W_n*Mass_kg]) + ([GroundForcesAndMoments_N_Nm] + [AeroForcesAndMoments_N_Nm]  + [ThurstForcesAndMoments_N_Nm])
Ext_Moments_Nm = ([GroundForcesAndMoments_N_Nm] + [AeroForcesAndMoments_N_Nm]  + [ThurstForcesAndMoments_N_Nm])
LoadFactors_N = (([W_n*Mass_kg])^-1) * ([GroundForcesAndMoments_N_Nm] + [AeroForcesAndMoments_N_Nm]  + [ThurstForcesAndMoments_N_Nm]) => [nx; ny; -1*nz]


BodyRates

Input
Ext_Moments_Nm
InertiaTensor_kgm²

Output
BodyRates_radps

Formulas		
BodyRates_radps = ([InertialTensor_kgm²]^-1)*((([InertialTensor_kgm²]*[p_radps; q_radps; r_radps])x[p_radps; q_radps; r_radps])- Moments_Nm))
[p_dot; q_dot; r_dot] = ([InertialTensor_kgm²]^-1)*([InertialTensor_kgm²]- Moments_Nm)
[p_radps; q_radps; r_radps] = Integral[p_dot; q_dot; r_dot]



BodyVelocities

Input
ExtForces_N
Mass_KG (m) 
BodyRates_radps 

Output
BodyVelocities_mps

Formulas
BodyVelocities = (ExtForces_N/Mass_KG) - (BodyRates_radps x [u_mps; v_mps; v_mps])

[u_dot; v_dot; q_dot] = (ExtForces_N/Mass_KG) - (BodyRates_radps)

[u_mps; v_mps; v_mps] = Integral[u_dot; v_dot; q_dot]


EulerAngles
Input
BodyRates_radps
EulerAngles_rad

Output
EulerRates_rad
LBE

Formulas
X_dot = [BodyRates_radps] + [EulerAngles_rad]
form1 = x_dot[u1+(u2*u4)*(u5/u8)+(u3*u7)*(u5/u8)]
form2 = x_dot[(u2*u7)-(u3*u4)]
form3 = x_dot[((u2*u4)+(u3*u7))/u8]

EulerAngles_rad = [Integral(form1); Integral(form2); Integral(form3)]

LBE = [u(5)*u(6), (u(1)*u(2)*u(6))-(u(4)*u(3)), (u(6)*u(2)*u(4))+(u(1)*u(3)); u(5)*u(3), u(1)*u(2)*u(3)+u(4)*u(6), (u(4)*u(2)*u(3))-(u(1)*u(6)); -u(2); u(1)*u(5), u(4)*u(5)]


x = PositionVector-Position[x;y;z]+AircraftOrientation[psi;theta;phi]+BodyVelocity-Velocities[u;v;w]+BodyAngularVelocity-Rotational[p;q;r]
x_dot = f(x)

